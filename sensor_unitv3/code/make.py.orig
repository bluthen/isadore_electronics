#!/usr/bin/python


import getopt
import sys
import os

def usage():
	print >> sys.stderr, "Usage: "+sys.argv[0]+" [OPTIONS] ADDRESS"
	print >> sys.stderr, "  -h, --help        Show this screen"
	print >> sys.stderr, "  -d, --debug       Debug build"
	print >> sys.stderr, "  -p, --program     Program unit"
	print >> sys.stderr, "  -c, --clean       Clean"
	print >> sys.stderr, "  -f, --fuse        Set fuse"
	print >> sys.stderr, "  --with-th         Build with temperature humidty"
	print >> sys.stderr, "  --with-pressure   Build in pressure module"
	print >> sys.stderr, "  --with-anemometer Build in Anemometer module"
	print >> sys.stderr, "  --with-thermo     Build in thermocouple module"
	print >> sys.stderr, "  --with-multit     Build in Multi-temp module"
	print >> sys.stderr, "  --with-tach       Build in tachometer module"

def setFuse():
	os.system('sh ./fuse_crystal_clock.sh')


try:
	opts, args = getopt.getopt(sys.argv[1:], "hdpcf", ["help", "debug", "program", "clean", "fuse", "with-th", "with-pressure", "with-anemometer", "with-thermo", "with-multit", "with-tach"])
	print opts
	print args
except getopt.GetoptError, err:
	print >> sys.stderr, str(err)
	usage()
	sys.exit(2)

if len(opts) == 0 or len(args) > 1:
	usage()
	sys.exit(2)

options, optionsArgs = zip(*opts)

if "-h" in options:
	usage()
	sys.exit(1)

unitAddress = None 
try:
	unitAddress = int(args[0])
except:
	pass

if "-f" in options or "--fuse" in options:
	setFuse()
	if not unitAddress:
		sys.exit(1)

if not unitAddress:
	print >> sys.stderr, "ERROR: No unit address." 
	usage()
	sys.exit(1)

UNITSRC=[]
UNITDEFS=["-DUNITADDR="+str(unitAddress)]

if '-d' in options or '--debug' in options:
	UNITSRC.append("./softuart.c")
	UNITDEFS.append("-DDEBUG")

if "--with-th" in options:
	UNITSRC.append("./modules/sht75.c")
	UNITDEFS.append("-DMODULE_TH")

if "--with-pressure" in options:
	UNITDEFS.append("-DMODULE_PRESSURE")

if "--with-anemometer" in options:
	UNITSRC.append("./modules/anemometer.c")
	UNITDEFS.append("-DMODULE_ANEMOMETER")

if "--with-thermo" in options:
	UNITSRC.append("./modules/thermocouple.c")
	UNITDEFS.append("-DMODULE_THERMOCOUPLE")

if "--with-multit" in options:
	UNITSRC.append("./modules/multitemp.c")
	UNITDEFS.append("-DMODULE_MULTITEMP")

if "--with-tach" in options:
	UNITSRC.append("./modules/tachometer.c")
	UNITDEFS.append("-DMODULE_TACHOMETER")

if len(UNITSRC) == 0:
	print >> sys.stderr, "ERROR: No features used."
	usage()
	sys.exit(1)

makeOpts = ''
if '-p' in options or '--program' in options:
	makeOpts += 'program'

if '-c' in options or '--clean' in options:
	makeOpts += "clean"


envVars = 'UNITDEFS="' + (' '.join(UNITDEFS)) + '" UNITSRC="' + (' '.join(UNITSRC)) + '"'
os.system(envVars+' make clean')
if makeOpts != "clean":
	os.system(envVars+' make '+makeOpts)

